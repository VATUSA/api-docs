openapi: 3.0.1
info:
  title: VATUSA API
  description: |-
    VATUSA APIv2 Documentation.
                Authentication methods are: <ul>
                <li> JSON Web Tokens (Translated from Laravel session)</li>
                <li> Session Cookies (Client-side credentials with ULS)</li>
                <li> API Keys (Issued to facilities)</li></ul>
                <p>Method security, if applicable, is indicated in brackets at the end of each endpoint title.</p>
                <p>Security classification: <ul>
                    <li><strong>Private:</strong> CORS Restricted (Internal)</li>
                    <li><strong>Auth:</strong> Accepts Session Cookie or JWT</li>
                    <li><strong>Key:</strong> Accepts API Key, Session Cookie, or JWT</li>
                </ul></p>
                <p>Facilities that have a APIv2 JWK defined in facility settings will have the data encapsulated in a
                signed package.  For more information, please see the IT section of the VATUSA forums.</p>
                <p>To prevent database changes in a development environment, you can either use your API sandbox key
                 or pass the <strong>?test</strong> query parameter with the call. Whether or not <strong>?test</strong> is present,
                 if both Sandbox JWK and Dev URL are configured, and the domains match, the response will be formatted according to JSON Web Signature, RFC 7515. </p>
  contact:
    name: VATUSA Web Team
    url: 'https://www.vatusa.net/info/members'
  version: 2.3.1
  x-logo:
    url: 'https://www.vatusa.net/img/logo-full.png'
servers:
  - url: 'https://api.vatusa.net/v2'
tags:
  - name: auth
    description: Internal authentication handling commands for use by VATUSA Web Systems to translate Laravel Sessions into JSON Web Tokens
  - name: cbt
    description: Computer Based Training actions
  - name: email
    description: User email addresses for staff members
  - name: exam
    description: Exam center actions
  - name: facility
    description: Facility management actions
  - name: public
    description: Public feeds of events and news
  - name: rating
    description: Rating changes
  - name: role
    description: Role handling
  - name: solo
    description: Solo certifications
  - name: stats
    description: Division statistics
  - name: support
    description: Support Center
  - name: survey
    description: Survey management
  - name: tmu
    description: Traffic Management Unit - Notices (NTOS)
  - name: training
    description: Centralized training records
  - name: transfer
    description: Transfer request submission and handling actions
  - name: user
    description: User account management actions
components:
  securitySchemes:
    jwt:
      type: http
      description: JSON Web Token translated from Laravel session
      scheme: bearer
    session:
      name: Cookie
      type: apiKey
      in: cookie
    apikey:
      type: apiKey
      description: API Key issued to facilities and generated on Facility Management page
      name: 'Authorization: APIKey'
      in: header
paths:
  /auth/token:
    get:
      summary: 'Get JWT [Private]'
      tags:
        - auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              examples: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      operationId: get-auth-token
      description: 'Get JWT, CORS restricted.'
      security:
        - jwt: []
        - session: []
  /auth/token/refresh:
    get:
      summary: 'Refresh JWT. [Private]'
      tags:
        - auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      operationId: get-auth-token-refresh
      description: Refresh JWT. CORS Restricted.
      security:
        - jwt: []
        - session: []
  /auth/info:
    get:
      summary: 'Get user info [Private]'
      tags:
        - auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./Models/User.yaml
              examples: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      operationId: get-auth-info
      security:
        - jwt: []
        - session: []
      description: Get logged in user's information
